#!/bin/bash
# @author: Gia Tuấn
# @website: https://wptangtoc.com
# @email: giatuan@wptangtoc.com
# @since: 2025

function huong_dan() {
  Tính năng sao lưu website [website backup] là quá trình tạo ra các bản sao của toàn bộ dữ liệu website của bạn và lưu trữ chúng ở một nơi an toàn.

  Những bản sao này đóng vai trò như một [phao cứu sinh], cho phép bạn khôi phục lại website về trạng thái hoạt động ổn định trước đó nếu có sự cố xảy ra.

  Tính năng này sao lưu mã nguồn [Định dạng .zip theo mặc định hoặc .tar.gz hoặc .tar.zst nếu đã thiết lập] và database website [định dạng .sql theo mặc định hoặc .sql.gz hoặc .sql.zst nếu đã thiết lập]

  Hỗ trợ sao lưu tại local máy chủ và đám mây drive
}

. /etc/wptt/.wptt.conf
if [[ $ngon_ngu = '' ]]; then
  ngon_ngu='vi'
fi
. /etc/wptt/lang/$ngon_ngu.sh

echo "Sao lưu website: $(date '+%d-%m-%Y %H:%M')" >>/var/log/wptangtoc-ols.log

echo ""
echo ""
echo ""
echo "========================================================================="
echo "|$backup_restore => $sao_luu_website                                 |"
echo "========================================================================="
. /etc/wptt/echo-color
NAME=$1
ggdriver=$2
ggdriver2=$3

if [[ $NAME = "98" ]]; then
  NAME=""
fi

if [[ "$NAME" = "" ]]; then
  . /etc/wptt/tenmien-them-lua-chon-tat-ca-website
  echo ""
  echo ""
  echo "$lua_chon_website_ban_muon $sao_luu_website: "
  echo ""
  lua_chon_NAME

  if [[ "$NAME" = "0" || "$NAME" = "" ]]; then
    . /etc/wptt/wptt-backup-restore-main 1
  fi
fi

if [[ $NAME = 'Tất cả website' ]]; then
  if [[ -z $3 ]]; then #doi số 3 không có giá trị auto mới hỏi
    unset ggdriver ggdriver2 checkdathietlap
    checkdathietlap=$(grep -rnw '/root/.config/rclone/rclone.conf' -e "wptangtoc" >>/dev/null 2>&1 && echo 1)
    if [[ $checkdathietlap ]]; then
      if [[ $(cat ~/.config/rclone/rclone.conf | grep 'onedrive') ]]; then
        echo "$ban_co_muon file backup uploads OneDrive?"
        drive_name="OneDrive"
      else
        echo "$ban_co_muon file backup uploads Google Drive?"
        drive_name="Google Drive"
      fi

      prompt="$nhap_lua_chon_cua_ban [1-2]: "
      ggdriver="n"
      options=("$dong_y" "$khong_dong_y")
      PS3="$prompt"
      select opt in "${options[@]}"; do
        case "$REPLY" in
        1)
          ggdriver="1998"
          break
          ;;

        2)
          ggdriver="n"
          break
          ;;

        $((${#options[@]} + 1)))
          printf "\n$ban_nhap_sai_he_thong_se_chon_khong_dong_y\n"
          break
          ;;
        *)
          printf "$ban_nhap_sai_he_thong_se_chon_khong_dong_y\n"
          break
          ;;
        esac
      done
      if [[ "$ggdriver" = "1998" ]]; then
        kiem_tra_xem_cloud_drive_co_hoat_dong_khong=$(rclone about wptangtoc: 2>/dev/null | grep 'Free:')
        if [[ $kiem_tra_xem_cloud_drive_co_hoat_dong_khong ]]; then
          echo "$ban_co_muon $xoa file backup tại local khi đã được lưu trữ đám mây $drive_name không?"
          prompt="$nhap_lua_chon_cua_ban [1-2]: "
          ggdriver2="12345"
          options=("$dong_y" "$khong_dong_y")
          PS3="$prompt"
          select opt in "${options[@]}"; do
            case "$REPLY" in
            1)
              ggdriver2="1998"
              break
              ;;

            2)
              ggdriver2="12345"
              break
              ;;

            $((${#options[@]} + 1)))
              printf "\n$ban_nhap_sai_he_thong_se_chon_khong_dong_y\n"
              break
              ;;
            *)
              printf "$ban_nhap_sai_he_thong_se_chon_khong_dong_y\n"
              break
              ;;
            esac
          done
        fi
      fi
    fi
  fi

  START_TIMESTAMP_FILE=$(mktemp) #khởi tạo file temp để xác định bắt đầu thực thi all

  if [[ $ggdriver = '1998' ]]; then
    dung_luong_drive_truoc_khi_sao_luu=$(rclone size wptangtoc: 2>/dev/null | grep 'size' | cut -f2 -d ':' | cut -f1 -d '(' | head -1)
  fi

  before_optimize_full_all=$(du -hs /usr/local/backup-website)
  if [ "$(ls -A /etc/wptt/vhost | grep -v '^\.\.conf$' | grep -v '^\.\.conf$' | sort -uV)" ]; then
    for entry in $(ls -A /etc/wptt/vhost | grep -v '^\.\.conf$' | sort -uV); do
      domain=$(echo $entry | sed 's/^.//' | sed 's/.conf//')
      path_html="/usr/local/lsws/$domain/html"
      i=1
      if [ "$domain" != "${domain/./}" ] && [ "$domain" != '.' ]; then #điều kiện domain phải có dấu . và lỗi chỉ có only .
        if [[ -d "$path_html" ]]; then
          . /etc/wptt/backup-restore/wptt-saoluu $domain $ggdriver $ggdriver2
        fi
      fi
    done
  fi

  check_menu_wptangtoc_active=$1
  if [[ $check_menu_wptangtoc_active = "98" ]]; then
    END_TIMESTAMP_FILE=$(mktemp) #kết thúc file temp để xác định những website nào đã được thực thi backup thành công
    clear
    echo "==================================================================="
    echo "Hoàn tất backup $sao_luu_tat_ca_website"
    echo "==================================================================="
    for entry in $(ls -A /etc/wptt/vhost | grep -v '^\.\.conf$' | sort -uV); do
      domain=$(echo $entry | sed 's/^.//' | sed 's/.conf//')
      path="/usr/local/lsws/$domain/html"
      i=1

      if [[ -d "$path" ]]; then
        if [[ $ggdriver2 != '1998' ]]; then #xac nhan da xoa tai local thì không phải check điều kiện file đã được khhởi tạo chưa
          if [[ $(find "/usr/local/backup-website/$domain" -type f -newer "$START_TIMESTAMP_FILE" ! -newer "$END_TIMESTAMP_FILE" -ls) ]]; then
            echo "Hoàn tất backup website: $domain"
          fi
        else
          echo "Hoàn tất backup website: $domain"
        fi
      fi
    done
    if [[ $ggdriver2 != '1998' ]]; then #xac nhan da xoa tai local thì không phải check điều kiện file đã được khhởi tạo chưa
      echo "==================================================================="
      echo "Dung lượng thư mục trước khi sao lưu	: $before_optimize_full_all"
      echo "Dung lượng thư mục sau khi sao lưu	: $(du -hs /usr/local/backup-website)"
      echo "==================================================================="
    fi

    if [[ $ggdriver = '1998' ]]; then #xac nhan có uploads drive
      echo "Dung lượng $drive_name của bạn trước khi sao lưu: $dung_luong_drive_truoc_khi_sao_luu"
      echo "Dung lượng $drive_name của bạn sau khi sao lưu: $(rclone size wptangtoc: 2>/dev/null | grep 'size' | cut -f2 -d ':' | cut -f1 -d '(' | head -1)"
    fi

    rm "$END_TIMESTAMP_FILE"
    . /etc/wptt/wptt-backup-restore-main 1
  fi
  rm -f "$START_TIMESTAMP_FILE"
  return 2>/dev/null
  exit
fi

pathcheck="/usr/local/backup-website/$NAME"
before_optimize=$(du -hs $pathcheck | sed 's/\t//g' | cut -f1 -d '/')
times=$(date +%Hgio\_%d\_%m\_%Y)

unset DB_User_web DB_Password_web DB_Name_web dinh_dang_nen_ma_nguon sql_gz
. /etc/wptt/.wptt.conf
. /etc/wptt/vhost/."$NAME".conf
cd /usr/local/lsws/"$NAME"/html

#check disk điều kiện xem có đủ năng sao lưu không

if [[ $dinh_dang_nen_ma_nguon = '1' ]]; then #nén mã nguồn zstd
  . /etc/wptt/backup-restore/wptt-check-disk-dieu-kien-backup "/usr/local/lsws/$NAME/html" "$NAME$times.tar.zst"
elif [[ $dinh_dang_nen_ma_nguon = '2' ]]; then
  . /etc/wptt/backup-restore/wptt-check-disk-dieu-kien-backup "/usr/local/lsws/$NAME/html" "$NAME$times.tar.gz"
else
  . /etc/wptt/backup-restore/wptt-check-disk-dieu-kien-backup "/usr/local/lsws/$NAME/html" "$NAME$times.zip"
fi

if [[ $dieu_kien_disk = '0' ]]; then #không đủ điều kiện để sao lưu
  check_menu_wptangtoc_active=$1
  if [[ $check_menu_wptangtoc_active = "98" ]]; then
    . /etc/wptt/wptt-backup-restore-main 1
  fi
  return 2>/dev/null
  exit
fi

_runing "$sao_luu_database website $NAME"

if [[ $sql_gz = '1' ]]; then
  mariadb-dump -u "$DB_User_web" -p"$DB_Password_web" "$DB_Name_web" --ssl-verify-server-cert=false | gzip >/usr/local/backup-website/$NAME/$NAME$times.sql.gz
elif [[ $sql_gz = '2' ]]; then
  mariadb-dump -u "$DB_User_web" -p"$DB_Password_web" "$DB_Name_web" --ssl-verify-server-cert=false | zstd >/usr/local/backup-website/$NAME/$NAME$times.sql.zst
else
  mariadb-dump -u "$DB_User_web" -p"$DB_Password_web" "$DB_Name_web" --ssl-verify-server-cert=false >/usr/local/backup-website/$NAME/$NAME$times.sql
fi

if [[ $sql_gz = '1' ]]; then
  check_file_error_database=$(du -c /usr/local/backup-website/$NAME/$NAME$times.sql.gz | awk '{print $1}' | sed '1d')
  if (($check_file_error_database < 10)); then
    tuanxacnhandb="0"
    _runloi "$sao_luu_database website $NAME"
    echo "========================================================================="
    echo "$sao_luu_database $khong_thanh_cong."
    echo "========================================================================="
    rm -f /usr/local/backup-website/$NAME/$NAME$times.sql.gz
  fi
elif [[ $sql_gz = '2' ]]; then
  check_file_error_database=$(du -c /usr/local/backup-website/$NAME/$NAME$times.sql.zst | awk '{print $1}' | sed '1d')
  if (($check_file_error_database < 10)); then
    tuanxacnhandb="0"
    _runloi "$sao_luu_database website $NAME"
    echo "========================================================================="
    echo "$sao_luu_database $khong_thanh_cong."
    echo "========================================================================="
    rm -f /usr/local/backup-website/$NAME/$NAME$times.sql.zst
  fi
else
  check_file_error_database=$(du -c /usr/local/backup-website/$NAME/$NAME$times.sql | awk '{print $1}' | sed '1d')
  if (($check_file_error_database < 10)); then
    tuanxacnhandb="0"
    _runloi "$sao_luu_database website $NAME"
    echo "========================================================================="
    echo "$sao_luu_database $khong_thanh_cong."
    echo "========================================================================="
    rm -f /usr/local/backup-website/$NAME/$NAME$times.sql
  fi
fi

if [[ -f /usr/local/backup-website/$NAME/$NAME$times.sql || -f /usr/local/backup-website/$NAME/$NAME$times.sql.gz || -f /usr/local/backup-website/$NAME/$NAME$times.sql.zst ]]; then
  _rundone "$sao_luu_database website $NAME"
  tuanxacnhandb="1"
else
  _runloi "$sao_luu_database website $NAME"
fi

_runing "$sao_luu_ma_nguon website $NAME"
echo ''

if [[ $dinh_dang_nen_ma_nguon = '1' ]]; then                            #nén mã nguồn zstd
  if [[ -f /usr/local/backup-website/$NAME/$NAME$times.tar.zst ]]; then #tránh xung đột cùng file nén cùng một lúc
    rm -f /usr/local/backup-website/$NAME/$NAME$times.tar.zst
  fi

  cd /usr/local/lsws/"$NAME"/html && tar -c \
    --exclude="./wp-content/ai1wm-backups" \
    --exclude="./wp-content/cache" \
    --exclude="./wp-content/updraft" \
    --exclude="./error_log" \
    --exclude="./wp-content/debug.log" \
    --exclude="./wp-content/uploads/backupbuddy_backups" \
    --exclude="./wp-content/backups-dup-pro" \
    --exclude="./wp-content/backups-dup-lite" \
    . | zstd -10 -o /usr/local/backup-website/$NAME/$NAME$times.tar.zst
elif [[ $dinh_dang_nen_ma_nguon = '2' ]]; then
  if [[ -f /usr/local/backup-website/$NAME/$NAME$times.tar.gz ]]; then #tránh xung đột cùng file nén cùng một lúc
    rm -f /usr/local/backup-website/$NAME/$NAME$times.tar.gz
  fi
  cd /usr/local/lsws/"$NAME"/html && tar -c \
    --exclude="./wp-content/ai1wm-backups" \
    --exclude="./wp-content/cache" \
    --exclude="./wp-content/updraft" \
    --exclude="./error_log" \
    --exclude="./wp-content/debug.log" \
    --exclude="./wp-content/uploads/backupbuddy_backups" \
    --exclude="./wp-content/backups-dup-pro" \
    --exclude="./wp-content/backups-dup-lite" \
    . | gzip >/usr/local/backup-website/$NAME/$NAME$times.tar.gz
else
  cd /usr/local/lsws/"$NAME"/html && zip -r /usr/local/backup-website/$NAME/$NAME$times.zip * -x "wp-content/ai1wm-backups/*" -x "wp-content/cache/*" -x "wp-content/updraft/*" -x "wp-content/ai1wm-backups/*" -x "error_log" -x "wp-content/debug.log" -x "wp-content/uploads/backupbuddy_backups/*" -x "wp-content/backups-dup-pro/*" -x "wp-content/backups-dup-lite/*"
fi

if [[ -f /usr/local/backup-website/$NAME/$NAME$times.zip || -f /usr/local/backup-website/$NAME/$NAME$times.tar.zst || -f /usr/local/backup-website/$NAME/$NAME$times.tar.gz ]]; then
  _rundone "$sao_luu_ma_nguon website $NAME"
  tuanxacnhan="1"
else
  _runloi "$sao_luu_ma_nguon website $NAME"
fi

checkdathietlap=$(grep -rnw '/root/.config/rclone/rclone.conf' -e "wptangtoc" >>/dev/null 2>&1 && echo 1)
if [[ $checkdathietlap ]]; then
  if [[ "$ggdriver" != "1998" ]]; then
    if [[ $(cat ~/.config/rclone/rclone.conf | grep 'onedrive') ]]; then
      drive_name='OneDrive'
      echo "$ban_co_muon file backup uploads ${drive_name}?"
    else
      drive_name='Google Drive'
      echo "$ban_co_muon file backup uploads ${drive_name}?"
    fi

    prompt="$nhap_lua_chon_cua_ban [1-2]: "
    uploads="n"
    options=("$dong_y" "$khong_dong_y")
    PS3="$prompt"
    select opt in "${options[@]}"; do
      case "$REPLY" in
      1)
        uploads="y"
        break
        ;;

      2)
        uploads="n"
        break
        ;;

      $((${#options[@]} + 1)))
        printf "\n$ban_nhap_sai_he_thong_se_chon_khong_dong_y\n"
        break
        ;;
      *)
        printf "$ban_nhap_sai_he_thong_se_chon_khong_dong_y\n"
        break
        ;;
      esac
    done
  fi
  if [[ "$uploads" = "y" || "$ggdriver" = "1998" ]]; then
    _runing "file backup uploads $drive_name"
    truoc_khi_backup=$(rclone size wptangtoc: 2>/dev/null | grep 'size' | cut -f2 -d ':' | cut -f1 -d '(' | head -1)

    if [[ $dinh_dang_nen_ma_nguon = '1' ]]; then #nén mã nguồn zstd
      #su ly file tar.zst
      rclone copy /usr/local/backup-website/"$NAME"/$NAME$times.tar.zst wptangtoc:wptangtoc_ols_backup/$NAME 2>/dev/null
    elif [[ $dinh_dang_nen_ma_nguon = '2' ]]; then
      rclone copy /usr/local/backup-website/"$NAME"/$NAME$times.tar.gz wptangtoc:wptangtoc_ols_backup/$NAME 2>/dev/null
    #su ly file tar.gz gửi drive
    else
      #su ly file zip
      rclone copy /usr/local/backup-website/"$NAME"/$NAME$times.zip wptangtoc:wptangtoc_ols_backup/$NAME 2>/dev/null
    fi

    if [[ $sql_gz = '1' ]]; then
      rclone copy /usr/local/backup-website/"$NAME"/$NAME$times.sql.gz wptangtoc:wptangtoc_ols_backup/$NAME 2>/dev/null
    elif [[ $sql_gz = '2' ]]; then
      rclone copy /usr/local/backup-website/"$NAME"/$NAME$times.sql.zst wptangtoc:wptangtoc_ols_backup/$NAME 2>/dev/null
    else
      rclone copy /usr/local/backup-website/"$NAME"/$NAME$times.sql wptangtoc:wptangtoc_ols_backup/$NAME 2>/dev/null
    fi

    #check xem đã được uploads lên chưa

    kiem_tra_xem_file_da_uploads=$(rclone lsf wptangtoc:wptangtoc_ols_backup/$NAME 2>/dev/null | grep "$NAME$times")
    if [[ $kiem_tra_xem_file_da_uploads ]]; then
      _rundone "File backup uploads $drive_name"
    else
      _runloi "File backup uploads $drive_name"
    fi

    if ! [[ "$ggdriver2" = "1998" || "$ggdriver2" = "12345" ]]; then

      if [[ $kiem_tra_xem_file_da_uploads ]]; then
        echo "$ban_co_muon $xoa file backup tại local khi đã được lưu trữ đám mây $drive_name không?"
        prompt="$nhap_lua_chon_cua_ban [1-2]: "
        clearfile="n"
        options=("$dong_y" "$khong_dong_y")
        PS3="$prompt"
        select opt in "${options[@]}"; do
          case "$REPLY" in
          1)
            clearfile="y"
            break
            ;;

          2)
            clearfile="n"
            break
            ;;

          $((${#options[@]} + 1)))
            printf "\n$ban_nhap_sai_he_thong_se_chon_khong_dong_y\n"
            break
            ;;
          *)
            printf "$ban_nhap_sai_he_thong_se_chon_khong_dong_y\n"
            break
            ;;
          esac
        done
      fi
    fi
    if [[ "$clearfile" = "y" || "$ggdriver2" = "1998" ]]; then
      _runing "$xoa file backup tại local"

      if [[ $dinh_dang_nen_ma_nguon = '1' ]]; then #nén mã nguồn zstd
        #su ly file tar.zst
        rm -f /usr/local/backup-website/"$NAME"/$NAME$times.tar.zst
      elif [[ $dinh_dang_nen_ma_nguon = '2' ]]; then
        rm -f /usr/local/backup-website/"$NAME"/$NAME$times.tar.gz
      #su ly file tar.gz gửi drive
      else
        #su ly file zip
        rm -f /usr/local/backup-website/"$NAME"/$NAME$times.zip
      fi

      if [[ $sql_gz = '1' ]]; then
        rm -f /usr/local/backup-website/"$NAME"/$NAME$times.sql.gz
      elif [[ $sql_gz = '2' ]]; then
        rm -f /usr/local/backup-website/"$NAME"/$NAME$times.sql.zst
      else
        rm -f /usr/local/backup-website/"$NAME"/$NAME$times.sql
      fi
      _rundone "$xoa file backup tại local"
    fi

  fi
fi

clear
if [[ "$tuanxacnhandb" = "1" && "$tuanxacnhan" = "1" ]]; then

  echo "==================================================================="
  echo "$sao_luu_website $NAME $thanh_cong                 "
  if ! [[ "$clearfile" = "y" || "$ggdriver2" = "1998" ]]; then #nếu đã chọn xoá file local thì không cần print ra giá trị lữu trữ ổ cứng nữa
    echo "==================================================================="
    echo "Disk : $(df -BG | awk '$NF=="/"{printf "%d/%dGB (%s)\n", $3,$2,$5}')                        "
    echo "$duong_dan_thu_muc backup	: /usr/local/backup-website/$NAME         "
    echo "$duong_dan_thu_muc website	: /usr/local/lsws/$NAME/html              "
    echo "==================================================================="
    echo "Dung lượng thư mục trước khi backup	: $before_optimize"
    echo "Dung lượng thư mục sau khi backup	: $(du -hs $pathcheck | sed 's/\t//g' | cut -f1 -d '/')"
  fi
else
  echo "==================================================================="
  echo "$sao_luu_website $NAME $khong_thanh_cong                 "
  echo "==================================================================="
fi

# disk=$(mount|grep ' / '|cut -d' ' -f 1)

disk=$(df -BG | awk '$NF=="/"{printf "%d/%d\n", $3,$2,$5}')
disk_dang_dung=$(echo $disk | cut -f1 -d '/')
disk_tong=$(echo $disk | cut -f2 -d '/' | cut -f1 -d ' ')
disk_kha_dung=$(expr $disk_tong - $disk_dang_dung)

# disk_kha_dung=$(df -T -h | grep $disk | awk -F ' ' '{print $5}' | tr -d 'a-zA-G' | sed "s:\.:,:g")

het_disk="2"
if [[ $disk_kha_dung =~ ^-?[0-9]+$ ]]; then
  if (("$disk_kha_dung" < "$het_disk")); then
    RED='\033[0;33m'
    NC='\033[0m'
    echo -e "${RED}==================================================================="
    echo "$canh_bao_fulldisk"
    echo "Disk: $(df -BG | awk '$NF=="/"{printf "%d/%dGB (%s)\n", $3,$2,$5}')"
    echo "$de_kiem_tra_dung_luong_o_cung_dang_su_dung: wptt disk"
    echo -e "=================================================================== ${NC}"
  fi
fi

echo "==================================================================="
if [[ "$uploads" = "y" ]]; then
  echo "==================================================================="
  echo "Dung lượng $drive_name của bạn trước khi sao lưu: $truoc_khi_backup"
  echo "Dung lượng $drive_name của bạn sau khi sao lưu: $(rclone size wptangtoc: 2>/dev/null | grep 'size' | cut -f2 -d ':' | cut -f1 -d '(' | head -1)"
  echo "==================================================================="
fi

echo "==================================================================="
echo "$phat_trien_boi_gia_tuan"
echo "==================================================================="

check_menu_wptangtoc_active=$1
if [[ $check_menu_wptangtoc_active = "98" ]]; then
  . /etc/wptt/wptt-backup-restore-main 1
fi
