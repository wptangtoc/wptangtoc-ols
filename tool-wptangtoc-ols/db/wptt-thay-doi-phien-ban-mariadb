#!/bin/bash

function huong_dan() {
  là tính năng để thay đổi nhánh phiên bản MariaDB
  Ví dụ: bạn đang sử dụng MariaDB phiên bản 10.5 bạn muốn chuyển lên bản 10.11 thì hãy sử dụng tính năng này hoặc ngược lại bạn hoàn toàn có thể hạ cấp phiên bản MariaDB.
  Bạn có thể thay đổi lựa chọn phiên bản MariaDB bạn muốn sử dụng
}

echo ""
echo ""
echo ""
echo "========================================================================="
echo "|Quản lý Database => Thay đổi nhánh phiên bản MariaDB                   |"
echo "========================================================================="
echo ""

. /etc/wptt/echo-color
. /etc/wptt/.wptt.conf
if [[ $ngon_ngu = '' ]]; then
  ngon_ngu='vi'
fi
. /etc/wptt/lang/$ngon_ngu.sh

echo ""
echo "Vui lòng backup database trước khi chuyển đổi phiên bản mariadb"
echo "Để tránh bị rủi ro khi quá trình chuyển đổi bị xảy ra sự cố"
echo ""
active_hien_tai=$(systemctl is-active mariadb.service 2>/dev/null)
if [[ $active_hien_tai != "active" ]]; then
  echo "Mariadb hiện tại không hoạt động không thể sử dụng tính năng này"
  check_menu_wptangtoc_active=$1
  if [[ $check_menu_wptangtoc_active = "98" ]]; then
    . /etc/wptt/wptt-db-main 1
  fi
fi

disk=$(mount | grep ' / ' | cut -d' ' -f 1)
disk_kha_dung=$(df -T -h | grep $disk | awk -F ' ' '{print $5}' | tr -d 'a-zA-G')
het_disk="2"

if [[ $(echo $disk_kha_dung | grep '.') ]]; then
  if [[ $(echo $disk_kha_dung | wc -c) = 4 ]]; then
    disk_kha_dung=$(echo $disk_kha_dung | tr -d '.')
    het_disk="20"
  fi
fi

if [[ $(echo $disk_kha_dung | grep '.') ]]; then
  if [[ $(echo $disk_kha_dung | wc -c) = 5 ]]; then
    disk_kha_dung=$(echo $disk_kha_dung | tr -d '.')
    het_disk="200"
  fi
fi

if [[ $disk_kha_dung =~ ^-?[0-9]+$ ]]; then
  if (("$disk_kha_dung" < "$het_disk")); then
    RED='\033[0;33m'
    NC='\033[0m'
    echo -e "${RED}==================================================================="
    echo "Gần hết dung lượng ổ cứng không thể dùng tính năng này"
    echo "$canh_bao_fulldisk"
    echo "Disk: $(df -BG | awk '$NF=="/"{printf "%d/%dGB (%s)\n", $3,$2,$5}')"
    echo "$de_kiem_tra_dung_luong_o_cung_dang_su_dung: wptt disk"
    echo -e "=================================================================== ${NC}"
    check_menu_wptangtoc_active=$1
    if [[ $check_menu_wptangtoc_active = "98" ]]; then
      . /etc/wptt/wptt-db-main 1
    fi
    exit
  fi
fi

echo "Lưu ý: vui lòng backup website trước khi sử dụng tính năng này"
echo "tránh rủi ro mất dữ liệu khi trong quá trình chuyển đổi bị gặp sự cố"
echo ""
echo ""
echo "Bạn hãy lựa chọn phiên bản Maria Database muốn sử dụng: "
rest_api_mariadb_verison=$(curl -s "https://downloads.mariadb.org/rest-api/mariadb" |
  tr "}" "\n" |
  grep '"release_support_type": "Long Term Support"' |
  grep '"release_status": "Stable"' |
  while read -r line; do
    echo "$line" | sed -E 's/.*"release_name": "([^"]+)".*/\1/'
  done)

while IFS= read -r line; do selects+=("$line"); done <<<"$rest_api_mariadb_verison"
PS3="
-//- Nhập vào lựa chọn của bạn [1-$(echo $rest_api_mariadb_verison | wc -w)]: "
select select in "${selects[@]}"; do
  mariadb_version=$select
  break
done

#nhập không có giá trị
if [[ $mariadb_version = '' ]]; then
  check_menu_wptangtoc_active=$1
  if [[ $check_menu_wptangtoc_active = "98" ]]; then
    . /etc/wptt/wptt-db-main 1
  fi
  exit
fi

#nhập không có giá trị
if [[ $mariadb_version = '0' ]]; then
  check_menu_wptangtoc_active=$1
  if [[ $check_menu_wptangtoc_active = "98" ]]; then
    . /etc/wptt/wptt-db-main 1
  fi
  exit
fi

phien_ban_hien_tai=$(mariadbd --version | cut -f4 -d " " | grep '^1' | cut -f1-2 -d '.' | cut -f1 -d '-')

if [[ $mariadb_version = $phien_ban_hien_tai ]]; then
  echo "Bạn đang sử dụng phiên bản $phien_ban_hien_tai rồi"
  check_menu_wptangtoc_active=$1
  if [[ $check_menu_wptangtoc_active = "98" ]]; then
    . /etc/wptt/wptt-db-main 1
  fi
  exit
fi

backup_database_wptt() {
  NAME=$1

  . /etc/wptt/.wptt.conf
  if [[ $ngon_ngu = '' ]]; then
    ngon_ngu='vi'
  fi
  . /etc/wptt/lang/$ngon_ngu.sh

  . /etc/wptt/echo-color
  . /etc/wptt/vhost/."$NAME".conf

  if [[ "$NAME" = "0" || "$NAME" = "" ]]; then
    . /etc/wptt/wptt-db-main 1
  fi

  pathcheck="/etc/wptt/vhost/.$NAME.conf"
  if [[ ! -f "$pathcheck" ]]; then
    clear
    echoDo "$ten_mien_nay_khong_ton_tai_tren_he_thong"
    sleep 3
    . /etc/wptt/wptt-db-main 1
    exit
  fi

  mkdir -p /usr/local/backup-website/move-db-version
  mkdir -p "/usr/local/backup-website/move-db-version/$NAME"

  _runing "$sao_luu_database website $NAME"

  if [[ $sql_gz = '1' ]]; then
    mariadb-dump -u "$DB_User_web" -p"$DB_Password_web" "$DB_Name_web" --ssl-verify-server-cert=false | gzip >/usr/local/backup-website/move-db-version/$NAME/$NAME.sql.gz
  elif [[ $sql_gz = '2' ]]; then
    mariadb-dump -u "$DB_User_web" -p"$DB_Password_web" "$DB_Name_web" --ssl-verify-server-cert=false | zstd >/usr/local/backup-website/move-db-version/$NAME/$NAME.sql.zst
  else
    mariadb-dump -u "$DB_User_web" -p"$DB_Password_web" "$DB_Name_web" --ssl-verify-server-cert=false >/usr/local/backup-website/move-db-version/$NAME/$NAME.sql
  fi

  if [[ ! -f /usr/local/backup-website/move-db-version/$NAME/$NAME.sql && ! -f /usr/local/backup-website/move-db-version/$NAME/$NAME.sql.gz && ! -f /usr/local/backup-website/move-db-version/$NAME/$NAME.sql.zst ]]; then
    _runloi "$sao_luu_database website $NAME"
  fi

  if [[ $sql_gz = '1' ]]; then
    check_file_error=$(du -c /usr/local/backup-website/move-db-version/$NAME/$NAME.sql.gz | awk '{print $1}' | sed '1d')
    if (($check_file_error < 10)); then
      _runloi "$sao_luu_database website $NAME"
      rm -f /usr/local/backup-website/$NAME/$NAME.sql.gz
      return 2>/dev/null
      exit
    fi
  elif [[ $sql_gz = '2' ]]; then
    check_file_error=$(du -c /usr/local/backup-website/move-db-version/$NAME/$NAME.sql.zst | awk '{print $1}' | sed '1d')
    if (($check_file_error < 10)); then
      _runloi "$sao_luu_database website $NAME"
      rm -f /usr/local/backup-website/$NAME/$NAME.sql.gz
      return 2>/dev/null
      exit
    fi
  else
    check_file_error=$(du -c /usr/local/backup-website/move-db-version/$NAME/$NAME.sql | awk '{print $1}' | sed '1d')
    if (($check_file_error < 10)); then
      _runloi "$sao_luu_database website $NAME"
      rm -f /usr/local/backup-website/move-db-version/$NAME/$NAME.sql
      return 2>/dev/null
      exit
    fi
  fi

  _rundone "$sao_luu_database website $NAME"

  echo "========================================================================="
}

if [ "$(ls -A /etc/wptt/vhost | grep -v '^\.\.conf$' | sort -uV)" ]; then
  echo "Sao lưu toàn bộ database trên hệ thống"
  echo ""
  echo ""
  for entry in $(ls -A /etc/wptt/vhost | grep -v '^\.\.conf$' | sort -uV); do
    domain=$(echo $entry | sed 's/^.//' | sed 's/.conf//')
    path="/usr/local/lsws/$domain/html"
    i=1

    if [[ -d "$path" ]]; then
      _runing "Sao lưu database website $domain"
      (backup_database_wptt $domain >/dev/null 2>&1)

      if [[ $sql_gz = '1' ]]; then
        check_file_error=$(du -c /usr/local/backup-website/move-db-version/$domain/$domain.sql.gz | awk '{print $1}' | sed '1d')
        if (($check_file_error < 10)); then
          _runloi "$sao_luu_database website $domain"
          rm -f /usr/local/backup-website/move-db-version/$domain/$domain.sql.gz
          continue
        fi
      elif [[ $sql_gz = '2' ]]; then
        check_file_error=$(du -c /usr/local/backup-website/move-db-version/$domain/$domain.sql.zst | awk '{print $1}' | sed '1d')
        if (($check_file_error < 10)); then
          _runloi "$sao_luu_database website $domain"
          rm -f /usr/local/backup-website/move-db-version/$domain/$domain.sql.gz
          continue
        fi
      else
        check_file_error=$(du -c /usr/local/backup-website/move-db-version/$domain/$domain.sql | awk '{print $1}' | sed '1d')
        if (($check_file_error < 10)); then
          _runloi "$sao_luu_database website $domain"
          rm -f /usr/local/backup-website/move-db-version/$domain/$domain.sql
          continue
        fi
      fi
      _rundone "Sao lưu database website $domain"
    fi
  done
fi

echo "Hoàn tất Chuyển nhánh phiên bản MariaDB $phien_ban_hien_tai chuyển sang MariaDB $mariadb_version thời gian: $(date '+%d-%m-%Y %H:%M')" >>/var/log/wptangtoc-ols.log
systemctl stop mariadb
pkill mysql
rm -rf /var/lib/mysql
rm -rf /etc/mysql
rm -f /etc/my.cnf.d/server.cnf
yum remove mariadb-server -y
yum remove mariadb-client -y
yum remove mariadb-common -y

OUTPUT=$(cat /etc/*release)
if echo $OUTPUT | grep -q "Ubuntu"; then
  sudo apt-get autoremove
fi

OUTPUT_OS_NAME_CHECK=$(cat /etc/*release)
if echo $OUTPUT_OS_NAME_CHECK | grep -q "AlmaLinux"; then
  mariadb_repo_name="almalinux8-amd64"
elif echo $OUTPUT_OS_NAME_CHECK | grep -q "Rocky Linux"; then
  mariadb_repo_name="rockylinux8-amd64"
else
  mariadb_repo_name="rhel8-amd64"
fi

if [[ $(uname -m | grep 'aarch64') ]]; then
  mariadb_repo_name=$(echo $mariadb_repo_name | sed 's/amd64/aarch64/g') #cpu arm
fi

if echo $OUTPUT_OS_NAME_CHECK | grep -q "AlmaLinux 9\|Rocky Linux 9\|Red Hat Enterprise Linux 9\|Oracle Linux Server 9"; then
  mariadb_repo_name=$(echo $mariadb_repo_name | sed 's/8-/9-/g') #dòng redhat 9 thay cho redhat 8
fi

if [[ -f /etc/yum.repos.d/MariaDB.repo ]]; then
  echo '[mariadb]
name = MariaDB
baseurl = http://yum.mariadb.org/'$mariadb_version'/'$mariadb_repo_name'
gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
gpgcheck=1
module_hotfixes=1' >/etc/yum.repos.d/MariaDB.repo
fi
#thiết lập repo mariadb

OUTPUT=$(cat /etc/*release)
if echo $OUTPUT_OS_NAME_CHECK | grep -q "Ubuntu 22.04\|Ubuntu 24.04"; then
  UBUNTU_CODENAME_VERSION=$(cat /etc/os-release | grep UBUNTU_CODENAME | cut -f2 -d=)
  apt-key adv --fetch-keys 'https://mariadb.org/mariadb_release_signing_key.asc'
  add-apt-repository 'deb [arch=amd64,arm64,ppc64el] http://sfo1.mirrors.digitalocean.com/mariadb/repo/'$mariadb_version'/ubuntu '$UBUNTU_CODENAME_VERSION' main' -y
fi

if $(cat /etc/*release | grep -q "Ubuntu"); then
  #ubuntu
  yum install mariadb-server mariadb-client -y
else
  #rehat
  yum install MariaDB-server MariaDB-client -y
fi

if [[ ! -d /var/lib/mysql ]]; then
  sed -i 's/http:\/\/yum.mariadb.org/https:\/\/mirror.rackspace.com/g' /etc/yum.repos.d/MariaDB.repo #thay repo dự phòng
  if echo $OUTPUT_OS_NAME_CHECK | grep -q "Ubuntu 22.04\|Ubuntu 24.04"; then
    UBUNTU_CODENAME_VERSION=$(cat /etc/os-release | grep UBUNTU_CODENAME | cut -f2 -d=)
    apt-key adv --fetch-keys 'https://mariadb.org/mariadb_release_signing_key.asc'
    add-apt-repository 'deb [arch=amd64,arm64,ppc64el] http://mariadb.mirrors.ovh.net/MariaDB/repo/'$mariadb_version'/ubuntu '$UBUNTU_CODENAME_VERSION' main' -y
  fi
fi

work_cpucore='1024'
cpucore=$(grep -c ^processor /proc/cpuinfo)
max_client=$(expr $work_cpucore \* $cpucore \* 2)
max_client_max=$(expr $work_cpucore \* $cpucore \* 3)
max_client_php=$(expr $work_cpucore \* $cpucore \/ 8)
tong_ram_byte=$(awk '/MemTotal/ {print $2}' /proc/meminfo)
rong_ram_mb=$(echo "scale=0;${tong_ram_byte}/1024" | bc)
if [[ "$rong_ram_mb" = "" ]]; then
  rong_ram_mb="2048"
fi
tong_ram_mb_db=$(echo "scale=0;${rong_ram_mb}/4" | bc)
max_conect_db=$(expr $max_client / 8)
tong_ram_gb=$(expr ${rong_ram_mb} / 1024)
db_table_size=$(expr $tong_ram_gb \* 64)
buffer_db=$(expr $rong_ram_mb / 6)

max_connections=$(expr 64 \* ${tong_ram_gb})

#cau hinh query cache set up optimize
if (($cpucore > 2)); then
  query_cache_type=0
  query_cache_size=0
else
  query_cache_type=1
  query_cache_size='50M'
fi

if [[ $query_cache_type = '' ]]; then
  query_cache_type=0
  query_cache_size=0
fi

if $(cat /etc/*release | grep -q "Ubuntu"); then
  duong_dan_cau_hinh_mariadb="/etc/mysql/my.cnf"
else
  duong_dan_cau_hinh_mariadb="/etc/my.cnf.d/server.cnf"
fi

echo "key_buffer_size = ${buffer_db}M
table_cache = 2000
innodb_buffer_pool_size = ${tong_ram_mb_db}M
max_connections = $max_connections
query_cache_type = $query_cache_type
query_cache_limit = 2M
query_cache_min_res_unit = 2k
query_cache_size = $query_cache_size
tmp_table_size = ${db_table_size}M
max_heap_table_size = ${db_table_size}M
thread_cache_size = 81
max_allowed_packet = 64M
wait_timeout=60" >>$duong_dan_cau_hinh_mariadb
sed -i '/\[mysqld\]/a skip-log-bin' $duong_dan_cau_hinh_mariadb

systemctl start mariadb
systemctl enable mariadb

. /etc/wptt/.wptt.conf
mariadb <<EOF
use mysql;
FLUSH PRIVILEGES;
CREATE USER 'wordpressadmin'@'localhost' IDENTIFIED BY '$database_admin_password';
GRANT ALL PRIVILEGES ON *.* TO 'wordpressadmin'@'localhost' WITH GRANT OPTION;
DROP USER 'root'@'localhost';
FLUSH PRIVILEGES;
EOF

for entry in $(ls -A /etc/wptt/vhost | grep -v '^\.\.conf$' | sort -uV); do
  domain=$(echo $entry | sed 's/^.//' | sed 's/.conf//')
  path="/usr/local/lsws/$domain/html"
  i=1

  if [ "$domain" != "${domain/./}" ] && [ "$domain" != '.' ]; then #điều kiện domain phải có dấu . và lỗi chỉ có only .
    unset DB_User_web DB_Password_web DB_Name_web
    . /etc/wptt/vhost/."$domain".conf
    _runing "Thêm database website $domain"
    if [[ $DB_Name_web ]]; then
      mariadb -u $database_admin_username -p"$database_admin_password" --ssl-verify-server-cert=false -e "DROP DATABASE IF EXISTS ${DB_Name_web}"
      mariadb -u $database_admin_username -p"$database_admin_password" --ssl-verify-server-cert=false -e "CREATE DATABASE IF NOT EXISTS ${DB_Name_web}"
      mariadb -u $database_admin_username -p"$database_admin_password" --ssl-verify-server-cert=false -e "DROP USER IF EXISTS '${DB_User_web}'@'localhost'"
      mariadb -u $database_admin_username -p"$database_admin_password" --ssl-verify-server-cert=false -e "CREATE USER IF NOT EXISTS '${DB_User_web}'@'localhost' IDENTIFIED BY '${DB_Password_web}'"
      mariadb -u $database_admin_username -p"$database_admin_password" --ssl-verify-server-cert=false -e "GRANT ALL PRIVILEGES ON ${DB_Name_web}.* TO '${DB_User_web}'@'localhost' WITH GRANT OPTION"
      mariadb -u $database_admin_username -p"$database_admin_password" --ssl-verify-server-cert=false -e "FLUSH PRIVILEGES"
      _rundone "Thêm database website $domain"
    else
      _runloi "Thêm database website $domain"
    fi
    _runing "Khôi phục database website $domain"
    #import file .sql
    if [[ -f /usr/local/backup-website/move-db-version/$domain/$domain.sql || -f /usr/local/backup-website/move-db-version/$domain/$domain.sql.gz || -f /usr/local/backup-website/move-db-version/$domain/$domain.sql.zst ]]; then
      if [[ -f /usr/local/backup-website/move-db-version/$domain/$domain.zst ]]; then
        zstd -d </usr/local/backup-website/move-db-version/$domain/$domain.sql.zst | mariadb -u "$database_admin_username" -p"$database_admin_password" "$DB_Name_web" --ssl-verify-server-cert=false # sử dụng import .sql.zst
        _rundone "Khôi phục database website $domain"
      elif [[ -f /usr/local/backup-website/move-db-version/$domain/$domain.sql.gz ]]; then
        zcat /usr/local/backup-website/move-db-version/$domain/$domain.sql.gz | mariadb -u "$database_admin_username" -p"$database_admin_password" "$DB_Name_web" --ssl-verify-server-cert=false # sử dụng import .sql.gz
        _rundone "Khôi phục database website $domain"
      else
        if [[ -f /usr/local/backup-website/move-db-version/$domain/$domain.sql ]]; then
          mariadb -u "$database_admin_username" -p"$database_admin_password" "$DB_Name_web" --ssl-verify-server-cert=false </usr/local/backup-website/move-db-version/$domain/$domain.sql #sử dụng import .sql
          _rundone "Khôi phục database website $domain"
        fi
      fi
    else
      _runloi "Khôi phục database website $domain"
    fi
  fi
done

rm -rf /usr/local/backup-website/move-db-version
systemctl restart mariadb.service

echo ''
_rundone "Hoàn tất Chuyển nhánh phiên bản MariaDB $phien_ban_hien_tai chuyển sang MariaDB $mariadb_version"

check_menu_wptangtoc_active=$1
if [[ $check_menu_wptangtoc_active = "98" ]]; then
  . /etc/wptt/wptt-db-main 1
fi
