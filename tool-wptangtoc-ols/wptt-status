#!/bin/bash
. /etc/wptt/.wptt.conf
if [[ $ngon_ngu = '' ]]; then
  ngon_ngu='vi'
fi
. /etc/wptt/lang/$ngon_ngu.sh
echo "$wptangtoc_ols_dang_kiem_tra_he_thong"
clear
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
up=$(awk '{a=$1/86400;b=($1%86400)/3600;c=($1%3600)/60} {printf("%d ngày %d giờ %d phút\n",a,b,c)}' /proc/uptime)

# 1. Xác định chiều rộng bên trong của hộp (số ký tự giữa hai dấu |)
RED='\033[0;31m'
NC='\033[0m' # No Color - trở về màu mặc định (thường là trắng)
box_inner_width=71

# 2. Tạo hàm để căn giữa văn bản với dấu | màu đỏ
center_text() {
  local text="$1"
  local text_len=${#text}
  # Xử lý trường hợp text dài hơn chiều rộng hộp
  if ((text_len >= box_inner_width)); then
    # Nếu quá dài, vẫn in dấu | màu đỏ nhưng không căn giữa khoảng trắng
    printf "${RED}|${NC} %s ${RED}|${NC}\n" "$text"
    return
  fi
  local total_padding=$((box_inner_width - text_len))
  local pad_left=$((total_padding / 2))
  local pad_right=$((total_padding - pad_left))

  # --- DÒNG QUAN TRỌNG ĐÃ THAY ĐỔI ---
  # In dấu | màu đỏ, sau đó reset màu (NC)
  # In khoảng trắng trái (màu trắng)
  # In nội dung text (màu trắng)
  # In khoảng trắng phải (màu trắng)
  # In dấu | màu đỏ, sau đó reset màu (NC) và xuống dòng
  printf "${RED}|${NC}%*s%s%*s${RED}|${NC}\n" $pad_left "" "$text" $pad_right ""
  # --- KẾT THÚC THAY ĐỔI ---
}

# --- In banner với hàm căn giữa đã cập nhật ---

# In đường viền trên màu đỏ, sau đó reset màu về mặc định
echo -e "${RED}+-----------------------------------------------------------------------+${NC}"

# Gọi hàm center_text cho từng dòng nội dung
center_text "" # Dòng trống
center_text "WPTANGTOC OLS $phien_ban: $version_wptangtoc_ols"
center_text "$phat_trien_boi_gia_tuan"

# Xử lý các dòng điều kiện
if [[ $wptangtoc_ols_giatuan = "1" && $key_activate ]]; then
  center_text "WPTangToc OLS enterprise + premium"
else
  if [[ $wptangtoc_ols_giatuan = "1" ]]; then
    center_text "WPTangToc OLS enterprise"
  fi
  if [[ $key_activate ]]; then
    center_text "WPTangToc OLS premium"
  fi
fi

if [[ $beta_wptangtoc_ols = "1" ]]; then
  center_text "WPTangToc OLS beta"
fi
center_text "" # Dòng trống cuối cùng
echo -e "${RED}+-----------------------------------------------------------------------+${NC}"

thoi_gian=$(date +'%H' | sed 's/^0//g')
if (($thoi_gian < 10)); then
  thoi_diem='Chúc bạn có buổi sáng tuyệt vời'
elif (($thoi_gian < 14)); then
  thoi_diem='Chúc bạn có buổi trưa tuyệt vời'
elif (($thoi_gian < 18)); then
  thoi_diem='Chúc bạn có buổi chiều tuyệt vời'
else
  thoi_diem='Chúc bạn có buổi tối tuyệt vời'
fi

if [[ $ngon_ngu = 'en' ]]; then
  if (($thoi_gian < 10)); then
    thoi_diem='Good morning'
  elif (($thoi_gian < 18)); then
    thoi_diem='Good Afternoon'
  else
    thoi_diem='Good Evening'
  fi
fi

if [[ $wptangtoc_ols_giatuan = "1" ]]; then
  echo "$thoi_diem - WPTangToc OLS Premium $san_sang_phuc_vu		        "
else
  echo "$thoi_diem - $chao_mung_ban_den_voi_wptangtoc_ols		        "
fi

# --- CPU ---
cpu_usage_raw=$(grep 'cpu ' /proc/stat | awk '{usage=($2+$4)*100/($2+$4+$5)} END {print usage}')
cpu_display=$(echo "$cpu_usage_raw" | awk \
  '{ \
    if ($1 > 90) { \
      printf "\033[31m%.0f%%\033[0m", $1; \
    } else if ($1 > 70) { \
      printf "\033[33m%.0f%%\033[0m", $1; \
    } else { \
      printf "%.0f%%", $1; \
    } \
  }')

# --- RAM ---
ram_stats=$(free -m | awk 'NR==2{printf "%s %s %.2f", $3, $2, $3*100/$2 }')
ram_used=$(echo "$ram_stats" | awk '{print $1}')
ram_total=$(echo "$ram_stats" | awk '{print $2}')
ram_percent_raw=$(echo "$ram_stats" | awk '{print $3}')

ram_percent_display=$(echo "$ram_percent_raw" | awk \
  '{ \
    if ($1 > 90) { \
      printf "\033[31m(%.2f%%)\033[0m", $1; \
    } else if ($1 > 70) { \
      printf "\033[33m(%.2f%%)\033[0m", $1; \
    } else { \
      printf "(%.2f%%)", $1; \
    } \
  }')
ram_info="${ram_used}/${ram_total}MB ${ram_percent_display}"

# --- Disk (Sửa đổi) ---
# Lấy thông tin used, total, percent_with_% cho thư mục gốc (/) một cách trực tiếp hơn.
# Chuyển hướng lỗi của df sang /dev/null để tránh làm gián đoạn script.
# awk 'NR==2' để lấy dòng thứ 2 (dòng dữ liệu, bỏ qua header).
disk_stats_output=$(df -BG / 2>/dev/null | awk 'NR==2 {print $3, $2, $5}') # $3=Used, $2=Total, $5=Use%

if [ -z "$disk_stats_output" ]; then
  # Nếu lệnh df không trả về kết quả (ví dụ: lỗi I/O, hệ thống rất bận)
  disk_used_gb="N/A"
  disk_total_gb="N/A"
  disk_percent_display="\033[31m(N/A)\033[0m" # Màu đỏ cho trạng thái N/A
else
  # Đọc các giá trị vào biến riêng biệt
  read -r disk_used_raw disk_total_raw disk_percent_raw_str <<<"$disk_stats_output"
  # Ví dụ: disk_used_raw="20G", disk_total_raw="40G", disk_percent_raw_str="53%"

  disk_used_gb=$(echo "$disk_used_raw" | sed 's/G//')
  disk_total_gb=$(echo "$disk_total_raw" | sed 's/G//')

  # Xóa dấu % để lấy giá trị số cho việc so sánh logic
  disk_percent_numeric=$(echo "$disk_percent_raw_str" | sed 's/%//')

  # Kiểm tra xem disk_percent_numeric có phải là số không
  if ! [[ "$disk_percent_numeric" =~ ^[0-9]+$ ]]; then
    # Nếu không phải số (ví dụ: df trả về định dạng lạ, hoặc disk_percent_raw_str trống)
    # Hiển thị (ERR%) với màu đỏ. Sử dụng giá trị gốc nếu có, hoặc ERR nếu trống.
    display_val_on_error="(${disk_percent_raw_str:-ERR})"
    disk_percent_display="\033[31m${display_val_on_error}\033[0m"
    # Bạn cũng có thể muốn đặt lại disk_used_gb và disk_total_gb thành "ERR" ở đây nếu muốn
    # disk_used_gb="ERR"
    # disk_total_gb="ERR"
  else
    # Nếu là số, tiến hành định dạng màu như cũ
    # Sử dụng awk -v để truyền biến vào awk một cách an toàn hơn ENVIRON
    # Truyền chuỗi đã có dấu ngoặc đơn và % (ví dụ: "(53%)") vào awk
    disk_percent_display_input="(${disk_percent_raw_str})"
    disk_percent_display=$(echo "$disk_percent_numeric" | awk -v p_str="$disk_percent_display_input" \
      '{ \
        val = $1 + 0; # Đảm bảo $1 được coi là số
        if (val > 90) { \
          printf "\033[31m%s\033[0m", p_str; \
        } else if (val > 70) { \
          printf "\033[33m%s\033[0m", p_str; \
        } else { \
          printf "%s", p_str; \
        } \
      }')
  fi
fi
disk_info="${disk_used_gb}/${disk_total_gb}GB ${disk_percent_display}"

# --- Output ---
echo "-------------------------------------------------------------------------"
echo "CPU : $cpu_display | Ram : $ram_info | Disk: $disk_info "
echo "-------------------------------------------------------------------------"
ols1=$(/usr/local/lsws/bin/lswsctrl status | grep 'litespeed is running')
mariadb1=$(systemctl is-active mariadb.service 2>/dev/null)

if [[ -n "$ols1" ]]; then
  ols="$hoat_dong_tot"
else
  ols="Webserver LiteSpeed $dang_gap_su_co"
  /usr/local/lsws/bin/lswsctrl restart >/dev/null 2>&1
fi

if [[ "$mariadb1" = 'active' ]]; then
  mariadb="$hoat_dong_tot"
else
  mariadb="MariaDB Database $dang_gap_su_co"
  systemctl restart mariadb.service >/dev/null 2>&1
fi

echo "Webserver LiteSpeed	: $ols"
echo "MariaDB			: $mariadb"
if [[ -n "$ols1" ]] && [[ "$mariadb1" = 'active' ]]; then
  echo "$tinh_trang_may_chu	: $hoat_dong_tot"
else
  echo "$tinh_trang_may_chu	: $may_chu_dang_gap_van_de"
  echo "$yeu_cau_ho_tro		: https://wptangtoc.com/lien-he"
fi
echo "System uptime	    	: $up"
echo '-------------------------------------------------------------------------'
echo "$tang_toc_wordpress	: https://wptangtoc.com/blog"
echo "$nha_tai_tro_chinh	: wptangtoc.com"
echo "$phat_trien_boi		: Gia Tuấn"
#echo "Khoá đào tạo nâng cao		: https://wptangtoc.com/dao-tao/"
echo '-------------------------------------------------------------------------'
echo "$nhap_lenh_phim_1_de_vao_menu_quan_tri"
if [[ $(which fzf 2>/dev/null) ]]; then
  echo $nhap_lenh_phim_00_de_vao_menu_quan_tri
fi
echo '-------------------------------------------------------------------------'
ram_sudung=$(free | grep Mem | awk '{print $3/$2 * 100.0}' | cut -f1 -d '.')
if [[ $ram_sudung =~ ^-?[0-9]+$ ]]; then
  if (("$ram_sudung" > 80)); then
    RED='\033[0;33m'
    NC='\033[0m'
    echo -e "${RED}==================================================================="
    echo "Cảnh báo FULL Ram đang sử dụng: ${ram_sudung}%"
    echo -e "=================================================================== ${NC}"
  fi
fi

THRESHOLD_GB=2                                                   # Ngưỡng dung lượng (GB)
available_space=$(df -k / | awk 'NR==2{print $4}')               # Lấy dung lượng khả dụng (KB) của /
available_space_gb=$(echo "$available_space / 1024 / 1024" | bc) # Đổi sang GB
if (($(echo "$available_space_gb <= $THRESHOLD_GB" | bc -l))); then
  message="*Cảnh báo:* Ổ cứng của máy chủ gần đầy chỉ còn khả dụng: *$(echo "$available_space_gb" | awk '{printf "%.2f", $1}') GB*."
  RED='\033[0;33m'
  NC='\033[0m'
  echo -e "${RED}==================================================================="
  echo "$canh_bao_fulldisk"
  echo "$message" # Hoặc dùng hàm send_telegram_message nếu bạn đã định nghĩa
  echo "Disk: $(df -BG | awk '$NF=="/"{printf "%d/%dGB (%s)\n", $3,$2,$5}')"
  echo "$de_kiem_tra_dung_luong_o_cung_dang_su_dung: wptt disk"
  echo -e "=================================================================== ${NC}"
fi

if [[ "$thong_bao_login_ssh" = "1" ]]; then
  client_ip=$(echo $SSH_CLIENT | awk '{ print $1}')
  vps_ip=$(curl -sf --connect-timeout 5 --max-time 10 https://ipv4.icanhazip.com || curl -sf --connect-timeout 5 --max-time 10 https://checkip.amazonaws.com)

  date="$(date "+%d-%m-%Y %H:%M")"
  info_ip=https://ipinfo.io/${client_ip}
  text="
Cảnh báo đăng nhập SSH - ${vps_ip}
-------------------------------------
IP đăng nhập: *${client_ip}* - [Thông tin chi tiết](${info_ip})
Thời điểm: ${date}
Website: $(
    for entry in $(ls -A /etc/wptt/vhost | grep -v '^\.\.conf$' | sort -uV); do
      domain=$(echo $entry | sed 's/^.//' | sed 's/.conf//')
      path="/usr/local/lsws/$domain/html"
      i=1

      if [[ -d "$path" ]]; then
        echo "$domain ,"
      fi
    done
  )
-------------------------------------
Cảm ơn bạn đã chọn WPTangToc OLS
WPTangToc OLS phiên bản : $version_wptangtoc_ols
Phát triển bởi [Gia Tuấn](https://wptangtoc.com/gia-tuan)
"
  url_tele="https://worker-soft-shape-e788.hoangtuan0137.workers.dev/bot${telegram_api}/sendMessage"
  curl -s -d "chat_id=$telegram_id&text=${text}&disable_web_page_preview=true&parse_mode=markdown" $url_tele >/dev/null
fi
