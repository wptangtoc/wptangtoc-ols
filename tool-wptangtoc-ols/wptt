#!/bin/bash
# @author: Gia Tuấn
# @website: https://wptangtoc.com
# @email: giatuan@wptangtoc.com
# @since: 2024

. /etc/wptt/echo-color
function help() {
  . /etc/wptt/.wptt.conf
  echo "-------------------------------------------------------------------------"
  echo "Gọi Menu WPTangToc OLS ấn phím 1 hoặc wptangtoc"
  echo "Cập nhật WPTangToc OLS ấn phím 99 hoặc wptt update-wptangtoc"
  echo "-------------------------------------------------------------------------"
  echo "Một số câu lệnh sử dụng WPTangToc OLS không cần truy cập Menu WPTangToc OLS"
  echo "Sao lưu tất cả website    : wptt saoluu-all"
  echo "Sao lưu website           : wptt saoluu $Website_chinh"
  echo "Khoi phuc website         : wptt khoiphuc $Website_chinh"
  echo "reboot ALL service        : wptt reboot-all"
  echo "reboot LiteSpeed          : wptt reboot-ls"
  echo "reboot Database           : wptt reboot-db"
  echo "Xem thong tin tai khoan   : wptt taikhoan"
  echo "Xem cau hinh webserver    : wptt cauhinh"
  echo "Xem dia chi IP cua VPS    : wptt ip"
  echo "Preload Cache ALL         : wptt preload-all"
  echo "Preload Cache             : wptt preload $Website_chinh"
  echo "Xoa Cache ALL             : wptt xoa-cache-all"
  echo "Xoa cache                 : wptt xoa-cache $Website_chinh"
  echo "Phan quyen ALL            : wptt phan-quyen"
  echo "Phan quyen domain         : wptt phan-quyen $Website_chinh"
  echo "Thêm website              : wptt them-website"
  echo "Tinh trang disk 			: wptt disk"
  echo "Kich hoat PhpMyAdmin		: wptt phpmyadmin"
  echo "Huy kich hoat PhpMyAdmin	: wptt xoa-phpmyadmin"
  echo "Truy cập mã nguồn nhanh	: wptt cd-src"
  echo "Tai khoan PhpMyAdmin		: wptt phpmyadmin-taikhoan"
  echo "Danh sach domain          : wptt list-domain"
  echo "Reset Htaccess            : wptt htaccess-reset"
  echo "Cai SSL FREE letsencrypt  : wptt ssl $Website_chinh"
  echo "Cai ma nguon WordPress    : wptt install-wordpress $Website_chinh"
  echo "Kiem tra domain dns tro ve may chu chua: wptt dns-check $Website_chinh"
  echo "-------------------------------------------------------------------------"
  echo "ghi chu: $Website_chinh bạn có thể thay bằng domain khác có trong hệ thống của bạn để thực thi lệnh"
  echo "-------------------------------------------------------------------------"
  echo "Ghi chu 2: wptt là viết tắt của wptangtoc đơn giản thế thôi, như vậy để câu lệnh dễ nhớ"
  echo "-------------------------------------------------------------------------"
}

function reboot-ls() {
  _runing "Khởi động lại LiteSpeed"
  /usr/local/lsws/bin/lswsctrl restart >/dev/null 2>&1
  _rundone "Khởi động lại LiteSpeed"
  echo "-------------------------------------------------------------------------"
  local check_active=$(/usr/local/lsws/bin/lswsctrl status | grep 'litespeed is running')
  if [[ $check_active ]]; then
    echoDone "Tình trạng hoạt động LiteSpeed hiện tại"
    echoDone "LiteSpeed Webserver     : Hoạt động tốt"
  else
    echoDo "Tình trạng hoạt động LiteSpeed hiện tại"
    echoDo "LiteSpeed Webserver     : Đang gặp sự cố"
  fi
  echo "+-----------------------------------------------------------------------+"

  echo "Reboot litespeed webserver thời gian: $(date '+%d-%m-%Y %H:%M')" >>/var/log/wptangtoc-ols.log

}

function reboot-ls-full() {
  _runing "Khởi động lại LiteSpeed"
  /usr/local/lsws/bin/lswsctrl fullrestart >/dev/null 2>&1
  _rundone "Khởi động lại LiteSpeed"
  echo "-------------------------------------------------------------------------"
  local check_active=$(/usr/local/lsws/bin/lswsctrl status | grep 'litespeed is running')
  if [[ $check_active ]]; then
    echoDone "Tình trạng hoạt động LiteSpeed hiện tại"
    echoDone "LiteSpeed Webserver     : Hoạt động tốt"
  else
    echoDo "Tình trạng hoạt động LiteSpeed hiện tại"
    echoDo "LiteSpeed Webserver     : Đang gặp sự cố"
  fi
  echo "+-----------------------------------------------------------------------+"

  echo "Reboot litespeed webserver thời gian: $(date '+%d-%m-%Y %H:%M')" >>/var/log/wptangtoc-ols.log

}

function stop-ls() {
  _runing "Ngừng hoạt động LiteSpeed"
  /usr/local/lsws/bin/lswsctrl stop >/dev/null 2>&1
  _rundone "Ngừng hoạt động LiteSpeed"

  echo "-------------------------------------------------------------------------"
  local check_active=$(/usr/local/lsws/bin/lswsctrl status | grep 'litespeed is running')
  if [[ $check_active ]]; then
    echoDone "Tình trạng hoạt động LiteSpeed hiện tại"
    echoDone "LiteSpeed Webserver     : Hoạt động tốt"
  else
    echoDo "Tình trạng hoạt động LiteSpeed hiện tại"
    echoDo "LiteSpeed Webserver     : Đang gặp sự cố"
  fi
  echo "+-----------------------------------------------------------------------+"
  echo "Stop litespeed webserver thời gian: $(date '+%d-%m-%Y %H:%M')" >>/var/log/wptangtoc-ols.log
}

function reboot-db() {
  _runing "Khởi động lại Maria Database"
  systemctl restart mariadb.service
  _rundone "Khởi động lại Maria Database"
  echo "-------------------------------------------------------------------------"
  echoDone "Hoàn tất reboot Maria Database"
  echo "-------------------------------------------------------------------------"
  local check_active=$(systemctl is-active mariadb.service 2>/dev/null)
  if [[ $check_active = "active" ]]; then
    echoDone "Tình trạng hoạt động Maria Database hiện tại"
    echoDone "Maria Database    : Hoạt động tốt"
  else
    echoDone "Tình trạng hoạt động Maria Database hiện tại"
    echoDo "Maria Database     : Đang gặp sự cố"
  fi
  echo "+-----------------------------------------------------------------------+"
  echo "Reboot MariaDB thời gian: $(date '+%d-%m-%Y %H:%M')" >>/var/log/wptangtoc-ols.log
}

function reboot-all() {
  _runing "Khởi động lại LiteSpeed"
  /usr/local/lsws/bin/lswsctrl restart >/dev/null 2>&1
  _rundone "Khởi động lại LiteSpeed"

  _runing "Khởi động lại Maria Database"
  systemctl restart mariadb.service >/dev/null 2>&1
  _rundone "Khởi động lại Maria Database"

  _runing "Khởi động lại SSH"
  systemctl restart sshd.service >/dev/null 2>&1
  _rundone "Khởi động lại SSH"

  _runing "Khởi động lại Crond"
  if $(cat /etc/*release | grep -q "Ubuntu"); then
    systemctl restart cron.service >/dev/null 2>&1
  else
    systemctl restart crond.service >/dev/null 2>&1
  fi
  _rundone "Khởi động lại Crond"

  _runing "Khởi động lại fail2ban"
  systemctl restart fail2ban.service >/dev/null 2>&1
  _rundone "Khởi động lại fail2ban"

  if $(cat /etc/*release | grep -q "Ubuntu\|AlmaLinux 9\|Rocky Linux 9\|Red Hat Enterprise Linux 9\|Oracle Linux Server 9"); then
    local duong_dan_config_redis="/etc/redis/redis.conf"
  else
    local duong_dan_config_redis="/etc/redis.conf"
  fi

  if [[ -f $duong_dan_config_redis ]]; then
    _runing "Khởi động lại Redis"
    systemctl restart redis.service >/dev/null 2>&1
    _rundone "Khởi động lại Redis"
  fi

  if $(cat /etc/*release | grep -q "Ubuntu"); then
    local duong_path_memcached_config="/etc/memcached.conf"
  else
    local duong_path_memcached_config="/etc/sysconfig/memcached"
  fi

  if [[ -f $duong_path_memcached_config ]]; then
    _runing "Khởi động lại Memcached"
    systemctl restart memcached.service >/dev/null 2>&1
    _rundone "Khởi động lại Memcached"
  fi

  if [[ -f /etc/csf/csf.conf ]]; then
    _runing "Khởi động lại CSF"
    systemctl restart csf.service >/dev/null 2>&1
    systemctl restart lfd.service >/dev/null 2>&1
    _rundone "Khởi động lại CSF"
  fi

  nftables_service=$(systemctl status nftables.service 2>/dev/null | grep 'Active' | cut -f2 -d':' | xargs | cut -f1 -d' ' | xargs)
  if [[ "$nftables_service" = "active" ]]; then
    systemctl restart nftables
  fi

  echo "+-----------------------------------------------------------------------+"
  echo "|Tình trạng hoạt động các service hiện tại                              |"
  echo "+-----------------------------------------------------------------------+"
  echo "|LiteSpeed     : $(systemctl is-active lsws.service 2>/dev/null)                                                  |"
  echo "|MariaDB       : $(systemctl is-active mariadb.service 2>/dev/null)                                                 |"
  if [[ -f /etc/sysconfig/memcached ]]; then
    echo "|Memcached   : $(systemctl is-active memcached.service 2>/dev/null)                                                 |"
  fi
  if [[ -f $duong_dan_config_redis ]]; then
    echo "|Redis 		: $(systemctl is-active redis.service 2>/dev/null)                                                 |"
  fi
  if [[ -f /etc/csf/csf.conf ]]; then
    echo "|CSF 		: $(systemctl is-active csf.service 2>/dev/null)                                                 |"
  fi
  echo "|SSH           : $(systemctl is-active sshd.service 2>/dev/null)                                                 |"
  if $(cat /etc/*release | grep -q "Ubuntu"); then
    echo "|Crond         : $(systemctl is-active cron.service 2>/dev/null)                                                 |"
  else
    echo "|Crond         : $(systemctl is-active crond.service 2>/dev/null)                                                 |"
  fi

  echo "|Fail2Ban      : $(systemctl is-active fail2ban.service 2>/dev/null)                                                 |"
  nftables_service=$(systemctl is-active nftables.service 2>/dev/null)
  if [[ "$nftables_service" = "active" ]]; then
    echo "|Nftables      : $(systemctl is-active nftables.service 2>/dev/null)                                                 |"
  fi
  echo "+-----------------------------------------------------------------------+"

  echo "Reboot All service thời gian: $(date '+%d-%m-%Y %H:%M')" >>/var/log/wptangtoc-ols.log
}

function ip() {
  local ip=$(curl -skf --connect-timeout 5 --max-time 10 https://ipv4.icanhazip.com | grep -E -o '(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)' || curl -skf --connect-timeout 5 --max-time 10 https://checkip.amazonaws.com | grep -E -o '(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)')

  if [[ $ip ]]; then
    echo "IP hiện tại của webserver là: $ip"
  else
    echoDo "Không xác định được địa chỉ IP"
  fi
}

function dns-check() {
  local ip=$(curl -skf --connect-timeout 5 --max-time 10 https://ipv4.icanhazip.com | grep -E -o '(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)' || curl -skf --connect-timeout 5 --max-time 10 https://checkip.amazonaws.com | grep -E -o '(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)')
  local NAME=$1
  if [ "$NAME" = "${NAME/./}" ]; then
    clear
    . /etc/wptt/.wptt.conf
    echo "Domain ten mien nhap khong dung dinh dang."
    echo "vi du nhu: $Website_chinh"
    exit
  fi

  local checkdns=$(host $NAME | grep -Eo -m 1 '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')
  if [[ "$checkdns" = "" ]]; then
    local checkdns=$(nslookup $NAME | grep Address | cut -f5 | grep -Eo -m 1 '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')
  fi

  if [[ "$checkdns" != "$ip" ]]; then
    echo "Ban chua tro ten mien dns ve webhost ip: $ip moi"
    echo "Hay tro dns thi moi co the cai duoc ssl"
    echo "Hay tro DNS $checkdns thanh $ip roi quay lai cai ssl nhe"
    if [[ "$checkdns" = "" ]]; then
      echo "Ten mien $NAME chua duoc tro IP gia tri IP cua $NAME la khong co gia tri nao, ban vui long tro IP ve $ip"
    fi
    echo "Ten mien $NAME dang duoc su dung quan ly boi $checknameserver ban hay truy cap vao do de tro ten mien cua minh"
  else
    echo "domain $NAME da tro dns ve may chu cua ban ($ip)"
  fi
}

function version() {
  . /etc/wptt/.wptt.conf
  RED='\033[0;31m'
  NC='\033[0m'
  local wptangtocols_version=$(curl -s https://wptangtoc.com/share/version-wptangtoc-ols.txt)
  if [[ "$wptangtocols_version" != "$version_wptangtoc_ols" ]]; then
    clear
    echo "========================================================================="
    echo -e "Thông báo cập nhật - Bạn đang sử dụng WPTANGTOC OLS: ${RED} $version_wptangtoc_ols ${NC}"
    echo "-------------------------------------------------------------------------"
    echo -e "Đã có bản cập nhật mới WPTANGTOC OLS: ${RED} $wptangtocols_version ${NC}."
    echo "Gõ lệnh: 99 để cập nhật."
    echo "========================================================================="
  fi
}

function cauhinh() {
  . /etc/wptt/wptt-kiemtra
}

function cdbk() {
  source /etc/wptt/ma-nguon/wptt-truy-cap-nhanh-backup-website
}

function taikhoan() {
  . /etc/wptt/wptt-kiemtra2
}

function update-wptangtoc() {
  . /etc/wptt/wptt-update
}

function preload-all() {
  . /etc/wptt/wptt-preload-all
}

function preload() {
  local NAME=$1
  if [ "$NAME" = "${NAME/./}" ]; then
    clear
    . /etc/wptt/.wptt.conf
    echoDo "Domain ten mien nhap khong dung dinh dang."
    echo "vi du nhu: $Website_chinh"
    exit
  fi
  bash /etc/wptt/wptt-preload-cache2 $NAME
}

function saoluu-all() {
  . /etc/wptt/backup-restore/wptt-backup-all
}

function rm-login() {
  pwd=$(pwd)
  local path_web=$(echo $pwd | cut -f1-6 -d '/')
  _runing "Xóa WP cli login"
  if [[ ! -d $path_web/wp-content/plugins/wp-cli-login-server ]]; then
    _runloi "Xóa WP cli login"
    echoDo "website không cài đặt wp cli login"
    return 2>/dev/null
    exit
  fi
  local name_web=$(echo $pwd | cut -f5 -d '/')
  . /etc/wptt/php/php-cli-domain-config $name_web

  /usr/local/lsws/lsphp${phien_ban_php_domain_thuc_thi}/bin/php /usr/local/bin/wp plugin deactivate wp-cli-login-server --path=$path_web --allow-root --skip-plugin=$(cat /etc/wptt/ioncube-plugin-list | tr '\n' ',') >/dev/null 2>&1
  /usr/local/lsws/lsphp${phien_ban_php_domain_thuc_thi}/bin/php /usr/local/bin/wp plugin delete wp-cli-login-server --path=$path_web --allow-root --skip-plugin=$(cat /etc/wptt/ioncube-plugin-list | tr '\n' ',') >/dev/null 2>&1
  rm -rf $path_web/wp-content/plugins/wp-cli-login-server
  local tien_to=$(/usr/local/lsws/lsphp${phien_ban_php_domain_thuc_thi}/bin/php /usr/local/bin/wp db prefix --allow-root --path=$path_web --skip-plugin=$(cat /etc/wptt/ioncube-plugin-list | tr '\n' ',') 2>/dev/null)
  /usr/local/lsws/lsphp${phien_ban_php_domain_thuc_thi}/bin/php /usr/local/bin/wp db query "DELETE FROM ${tien_to}options WHERE option_name = 'wp_cli_login'" --allow-root --path=$path_web 2>/dev/null
  /usr/local/lsws/lsphp${phien_ban_php_domain_thuc_thi}/bin/php /usr/local/bin/wp db query "UPDATE ${tien_to}options SET option_value = 'a:0:{}' WHERE option_name = 'recently_activated';" --path=$path_web --allow-root 2>/dev/null
  _rundone "Xóa WP cli login"
}

function config-ls() {
  pwd=$(pwd)
  local name_web=$(echo $pwd | cut -f5 -d '/')
  if [[ $name_web = "" ]]; then
    echoDo "Khong xac duoc duoc domain website"
    exit
  fi
  if [[ -d /usr/local/lsws/$name_web/html/wp-content/plugins/litespeed-cache ]]; then
    . /etc/wptt/php/php-cli-domain-config $NAME
    /usr/local/lsws/lsphp${phien_ban_php_domain_thuc_thi}/bin/php /usr/local/bin/wp litespeed-option set cache-browser false --allow-root --path=/usr/local/lsws/$name_web/html --skip-plugin=$(cat /etc/wptt/ioncube-plugin-list | tr '\n' ',' | sed 's/,$//g') >/dev/null 2>&1
    /usr/local/lsws/lsphp${phien_ban_php_domain_thuc_thi}/bin/php /usr/local/bin/wp litespeed-option set cache-browser false --allow-root --path=/usr/local/lsws/$name_web/html >/dev/null 2>&1
    /usr/local/lsws/bin/lswsctrl restart >/dev/null 2>&1
    echo "Hoàn tất"
  else
    echo "Chưa cài đặt plugin litespeed cache"
  fi
}

function login() {
  pwd=$(pwd)
  local name_web=$(echo $pwd | cut -f5 -d '/')
  if [[ $name_web = "" ]]; then
    echoDo "Không xác định được domain website"
    exit
  fi
  . /etc/wptt/wordpress/login-wpadmin-magic $name_web
}

function login2() {
  pwd=$(pwd)
  local name_web=$(echo $pwd | cut -f5 -d '/')
  if [[ $name_web = "" ]]; then
    echoDo "Khong xac duoc duoc domain website"
    exit
  fi
  . /etc/wptt/wordpress/login-wpadmin-magic-dologin $name_web
}

function rm-login2() {
  pwd=$(pwd)
  local path_web=$(echo $pwd | cut -f1-6 -d '/')
  _runing "Xóa WP dologin"
  if [[ ! -d $path_web/wp-content/plugins/dologin ]]; then
    _runloi "Xóa WP dologin"
    echoDo "website không cài đặt wp dologin"
    return 2>/dev/null
    exit
  fi
  . /etc/wptt/php/php-cli-domain-config $NAME
  /usr/local/lsws/lsphp${phien_ban_php_domain_thuc_thi}/bin/php /usr/local/bin/wp plugin deactivate dologin --path=$path_web --allow-root >/dev/null 2>&1
  /usr/local/lsws/lsphp${phien_ban_php_domain_thuc_thi}/bin/php /usr/local/bin/wp plugin delete dologin --path=$path_web --allow-root >/dev/null 2>&1
  rm -rf $path_web/wp-content/plugins/dologin
  local tien_to=$(/usr/local/lsws/lsphp${phien_ban_php_domain_thuc_thi}/bin/php /usr/local/bin/wp db prefix --allow-root --path=$path_web 2>/dev/null)
  local WPMLTABLES=($(/usr/local/lsws/lsphp${phien_ban_php_domain_thuc_thi}/bin/php /usr/local/bin/wp db tables --all-tables --allow-root --path=$path_web 2>/dev/null | grep '_dologin_'))
  for WPMLTABLE in ${WPMLTABLES[@]}; do
    /usr/local/lsws/lsphp${phien_ban_php_domain_thuc_thi}/bin/php /usr/local/bin/wp db query "DROP TABLE ${WPMLTABLE}" --allow-root --path=$path_web 2>/dev/null
  done
  /usr/local/lsws/lsphp${phien_ban_php_domain_thuc_thi}/bin/php /usr/local/bin/wp db query "DELETE FROM ${tien_to}options WHERE option_name LIKE 'dologin.%'" --allow-root --path=$path_web 2>/dev/null
  _rundone "Xóa WP dologin"
}

function clear-cache() {
  pwd=$(pwd)
  local name_web=$(echo $pwd | cut -f5 -d '/')
  if [[ $name_web = "" ]]; then
    echoDo "Không xác định được domain website"
    exit
  fi
  . /etc/wptt/cache/wptt-xoacache $name_web
}

function status() {
  . /etc/wptt/wptt-status2 $name_web
}

function sitemap() {
  pwd=$(pwd)
  local path_web=$(echo $pwd | cut -f1-6 -d '/')
  _runing "Tạo lập sitemap"
  if [[ ! -d $path_web ]]; then
    _runloi "Tạo lập sitemap"
    return 2>/dev/null
    exit
  fi
  if [[ ! -f $path_web/wp-load.php ]]; then
    _runloi "Tạo lập sitemap"
    echoDo "website không sử dụng WordPress"
    return 2>/dev/null
    exit
  fi
  local name_web=$(echo $pwd | cut -f5 -d '/')
  . /etc/wptt/php/php-cli-domain-config $name_web
  /usr/local/lsws/lsphp${phien_ban_php_domain_thuc_thi}/bin/php /usr/local/bin/wp plugin install google-sitemap-generator --path=$path_web --allow-root --activate >/dev/null 2>&1
  /usr/local/lsws/bin/lswsctrl restart >/dev/null 2>&1
  _rundone "Tạo lập sitemap"
}

function query-monitor() {
  pwd=$(pwd)
  local path_web=$(echo $pwd | cut -f1-6 -d '/')
  _runing "Cài đặt plugin Query monitor"
  if [[ ! -d $path_web ]]; then
    _runloi "Cài đặt plugin Query monitor"
    return 2>/dev/null
    exit
  fi
  if [[ ! -f $path_web/wp-load.php ]]; then
    _runloi "Cài đặt plugin Query monitor"
    echoDo "website không sử dụng WordPress"
    return 2>/dev/null
    exit
  fi
  local name_web=$(echo $pwd | cut -f5 -d '/')
  . /etc/wptt/php/php-cli-domain-config $name_web
  /usr/local/lsws/lsphp${phien_ban_php_domain_thuc_thi}/bin/php /usr/local/bin/wp plugin install query-monitor --path=$path_web --allow-root --activate >/dev/null 2>&1
  _rundone "Cài đặt plugin Query monitor"
}

function rm-query-monitor() {
  pwd=$(pwd)
  local path_web=$(echo $pwd | cut -f1-6 -d '/')
  _runing "Xóa plugin Query monitor"
  if [[ ! -d $path_web ]]; then
    _runloi "Xóa plugin Query monitor"
    return 2>/dev/null
    exit
  fi

  if [[ ! -f $path_web/wp-load.php ]]; then
    _runloi "Xóa plugin Query monitor"
    echoDo "website không sử dụng WordPress"
    return 2>/dev/null
    exit
  fi

  if [[ ! -d $path_web/wp-content/plugins/query-monitor ]]; then
    _runloi "Xóa plugin Query monitor"
    echoDo "website không cài đặt query monitor"
    return 2>/dev/null
    exit
  fi

  local name_web=$(echo $pwd | cut -f5 -d '/')
  . /etc/wptt/php/php-cli-domain-config $name_web
  /usr/local/lsws/lsphp${phien_ban_php_domain_thuc_thi}/bin/php /usr/local/bin/wp plugin deactivate query-monitor --path=$path_web --allow-root >/dev/null 2>&1
  /usr/local/lsws/lsphp${phien_ban_php_domain_thuc_thi}/bin/php /usr/local/bin/wp plugin delete query-monitor --path=$path_web --allow-root >/dev/null 2>&1
  rm -f $path_web/wp-content/db.php
  _rundone "xóa plugin Query monitor"
}

function htaccess-chuyen-vhosts() {
  pwd=$(pwd)
  local name_web=$(echo $pwd | cut -f5 -d '/')
  if [[ $name_web = "" ]]; then
    echoDo "Khong xac duoc duoc domain website"
    exit
  fi
  _runing "Chuyển .htaccess sang vhosts website $name_web"
  . /etc/wptt/wptt-htaccess-tat-chuyen-doi-vhost $name_web >/dev/null 2>&1
  _rundone "Chuyển .htaccess sang vhosts website $name_web"
}

function vhosts-chuyen-htaccess() {
  pwd=$(pwd)
  local name_web=$(echo $pwd | cut -f5 -d '/')
  if [[ $name_web = "" ]]; then
    echoDo "Khong xac duoc duoc domain website"
    exit
  fi
  _runing "Chuyển vhosts sang .htaccess website $name_web"
  . /etc/wptt/wptt-vhost-chuyen-ve-htaccess $name_web >/dev/null 2>&1
  _rundone "Chuyển vhosts sang .htaccess website $name_web"
}

function list-domain() {
  . /etc/wptt/domain/wptt-list-domain
}

function saoluu() {
  NAME=$1
  if [ "$NAME" = "${NAME/./}" ]; then
    clear
    . /etc/wptt/.wptt.conf
    echoDo "Domain ten mien nhap khong dung dinh dang."
    echo "vi du nhu: $Website_chinh"
    sleep 3
    . /etc/wptt/backup-restore/wptt-saoluu
    exit
  fi
  . /etc/wptt/backup-restore/wptt-saoluu $NAME
}

function khoiphuc() {
  NAME=$1
  if [ "$NAME" = "${NAME/./}" ]; then
    clear
    . /etc/wptt/.wptt.conf
    echoDo "Domain ten mien nhap khong dung dinh dang."
    echo "vi du nhu: $Website_chinh"
    sleep 3
    . /etc/wptt/backup-restore/wptt-khoiphuc
    exit
  fi
  . /etc/wptt/backup-restore/wptt-khoiphuc $NAME
}

function xoa-cache-all() {
  . /etc/wptt/cache/xoa-cache-full
}

function xoa-cache() {
  local NAME=$1
  if [ "$NAME" = "${NAME/./}" ]; then
    clear
    . /etc/wptt/.wptt.conf
    echo "Domain ten mien nhap khong dung dinh dang."
    echo "vi du nhu: $Website_chinh"
    exit
  fi
  . /etc/wptt/cache/wptt-xoacache $NAME
}

function phan-quyen() {
  local NAME=$1
  if [[ $NAME ]]; then
    if [ "$NAME" = "${NAME/./}" ]; then
      clear
      . /etc/wptt/.wptt.conf
      echo "Domain ten mien nhap khong dung dinh dang."
      echo "vi du nhu: $Website_chinh"
      exit
    fi
    . /etc/wptt/wptt-phanquyen $NAME
  else
    . /etc/wptt/wptt-phanquyen 'Tất cả website'
  fi
}

function them-website() {
  local NAME=$1
  if [ "$NAME" = "${NAME/./}" ]; then
    clear
    . /etc/wptt/.wptt.conf
    echo "Domain ten mien nhap khong dung dinh dang."
    echo "vi du nhu: $Website_chinh"
    exit
  fi
  . /etc/wptt/wptt-themwebsite $NAME
}

function ssl() {
  local NAME=$1
  if [ "$NAME" = "${NAME/./}" ]; then
    clear
    . /etc/wptt/.wptt.conf
    echo "Domain ten mien nhap khong dung dinh dang."
    echo "vi du nhu: $Website_chinh"
    exit
  fi
  . /etc/wptt/ssl/wptt-caissl $NAME
}

function ssl-tra-phi-config() {
  local NAME=$1
  if [ "$NAME" = "${NAME/./}" ]; then
    clear
    . /etc/wptt/.wptt.conf
    echo "Domain ten mien nhap khong dung dinh dang."
    echo "vi du nhu: $Website_chinh"
    exit
  fi
  if [[ ! -d /usr/local/lsws/$NAME/html ]]; then
    echo "Domain không tồn tại trong hệ thống"
    exit
  fi
  bash /etc/wptt/ssl/wptt-config-ssl-tra-phi $NAME
}

function install-wordpress() {
  local NAME=$1
  if [ "$NAME" = "${NAME/./}" ]; then
    clear
    . /etc/wptt/.wptt.conf
    echo "Domain tên miền nhập không đúng định dạng."
    echo "ví dụ như: $Website_chinh"
    exit
  fi
  . /etc/wptt/wptt-install-wordpress $NAME
}

function renew-ssl-free() {
  _runing "Gia hạn SSl letsencrypt"
  /usr/bin/certbot renew --quiet
  /usr/local/lsws/bin/lswsctrl restart >/dev/null 2>&1
  _rundone "Gia hạn SSl letsencrypt"
}

function htaccess-reset() {
  . /etc/wptt/wptt-htaccess-reset
}

function phpmyadmin() {
  . /etc/wptt/phpmyadmin/wptt-mo-phpmyadmin
}

function phpmyadmin-taikhoan() {
  . /etc/wptt/phpmyadmin/wptt-thongtin-phpmyadmin
}

function xoa-phpmyadmin() {
  . /etc/wptt/phpmyadmin/wptt-xoa-phpmyadmin
}

function wp-memcached() {

  if $(cat /etc/*release | grep -q "Ubuntu"); then
    local duong_path_memcached_config="/etc/memcached.conf"
  else
    local duong_path_memcached_config="/etc/sysconfig/memcached"
  fi
  if [[ -f $duong_path_memcached_config ]]; then
    pwd=$(pwd)
    local name_web=$(echo $pwd | cut -f5 -d '/')
    if [[ $name_web = "" ]]; then
      echoDo "Không xác định được domain website"
      exit
    fi

    _runing "Thiết lập memcached"
    sed -i '/memcached_servers =/d' /usr/local/lsws/$name_web/html/wp-config.php
    sed -i "2 i \$memcached_servers = ['/var/run/memcached/memcached.sock:0'];" /usr/local/lsws/$name_web/html/wp-config.php
    rm -f /usr/local/lsws/"$name_web"/html/wp-content/object-cache.php
    cp -f /etc/wptt/cache/memcached.php /usr/local/lsws/$name_web/html/wp-content/object-cache.php
    . /etc/wptt/vhost/."$name_web".conf
    chown "$User_name_vhost":"$User_name_vhost" /usr/local/lsws/"$name_web"/html/wp-content/object-cache.php
    chmod 644 /usr/local/lsws/"$name_web"/html/wp-content/object-cache.php
    _rundone "Thiết lập memcached"
  else
    echo "Chưa cài đặt memcached"
  fi
}

function wp-redis() {
  local redis_check=$(systemctl status redis.service 2>/dev/null | grep 'Active' | cut -f2 -d':' | xargs | cut -f1 -d' ' | xargs)
  if [[ $redis_check = 'active' ]]; then
    local pwd=$(pwd)
    local name_web=$(echo $pwd | cut -f5 -d '/')
    if [[ $name_web = "" ]]; then
      echoDo "Không xác định được domain website"
      exit
    fi

    if [[ ! -f /usr/local/lsws/$name_web/html/wp-config.php ]]; then
      echo "Không xác định được đây là website WordPress"
      exit
    fi

    _runing "Kích hoạt redis cho website $name_web"
    . /etc/wptt/php/php-cli-domain-config $name_web

    if [[ $(/usr/local/lsws/lsphp${phien_ban_php_domain_thuc_thi}/bin/php /usr/local/bin/wp plugin list --fields=name --status=active --allow-root --path=/usr/local/lsws/$name_web/html | grep 'wp-redis') ]]; then
      _runloi "Đã cài đặt wp redis trước đó rồi"
      echoDo "website không cài đặt wp redis trước đó rồi"
      return 2>/dev/null
      exit
    fi

    sed -i '/redis_server =/d' /usr/local/lsws/$name_web/html/wp-config.php
    sed -i "2 i \$redis_server = array(\
    'host'=> '/var/run/redis/redis.sock',\
	'port'=>null,\
    'database'=> 0,\
);" /usr/local/lsws/$name_web/html/wp-config.php

    /usr/local/lsws/lsphp${phien_ban_php_domain_thuc_thi}/bin/php /usr/local/bin/wp config shuffle-salts WP_CACHE_KEY_SALT --force --path=/usr/local/lsws/$name_web/html --allow-root >/dev/null 2>&1

    for line_num in $(grep -n "define( 'WP_CACHE_KEY_SALT'" /usr/local/lsws/$name_web/html/wp-config.php | head -n -1 | cut -d: -f1 | tac); do sed -i "${line_num}d" /usr/local/lsws/$name_web/html/wp-config.php; done #để sửa trùng loọp nếu có WP_CACHE_KEY_SALT chỉ dữ liệu một cái WP_CACHE_KEY_SALT

    if [[ $(cat /usr/local/lsws/$name_web/html/wp-config.php | grep WP_CACHE_KEY_SALT) = '' ]]; then #chưa add WP_CACHE_KEY_SALT, thì add lại điều kiện
      sed -i "/define( 'WP_CACHE_KEY_SALT'/d" /usr/local/lsws/$name_web/html/wp-config.php && sed -i "/^define( 'NONCE_SALT'/a define( 'WP_CACHE_KEY_SALT', '$name_web' );" /usr/local/lsws/$name_web/html/wp-config.php
      /usr/local/lsws/lsphp${phien_ban_php_domain_thuc_thi}/bin/php /usr/local/bin/wp config shuffle-salts WP_CACHE_KEY_SALT --force --path=/usr/local/lsws/$name_web/html --allow-root >/dev/null 2>&1
      for line_num in $(grep -n "define( 'WP_CACHE_KEY_SALT'" /usr/local/lsws/$name_web/html/wp-config.php | head -n -1 | cut -d: -f1 | tac); do sed -i "${line_num}d" /usr/local/lsws/$name_web/html/wp-config.php; done #để sửa trùng loọp nếu có WP_CACHE_KEY_SALT chỉ dữ liệu một cái WP_CACHE_KEY_SALT
    fi

    /usr/local/lsws/lsphp${phien_ban_php_domain_thuc_thi}/bin/php /usr/local/bin/wp plugin install wp-redis --activate --allow-root --path=/usr/local/lsws/$name_web/html
    /usr/local/lsws/lsphp${phien_ban_php_domain_thuc_thi}/bin/php /usr/local/bin/wp redis enable --allow-root --path=/usr/local/lsws/$name_web/html
    _rundone "Kích hoạt redis cho website $name_web"
  else
    echo "Chưa cài đặt redis trên hệ thống, vui lòng cài đặt redis"
  fi
}

function disk() {
  echo "==================================================================="
  # --- Disk (Sửa đổi) ---
  disk_stats_output=$(df -BG / 2>/dev/null | awk 'NR==2 {print $3, $2, $5}') # $3=Used, $2=Total, $5=Use%
  if [ -z "$disk_stats_output" ]; then
    # Nếu lệnh df không trả về kết quả (ví dụ: lỗi I/O, hệ thống rất bận)
    disk_used_gb="N/A"
    disk_total_gb="N/A"
    disk_percent_display="\033[31m(N/A)\033[0m" # Màu đỏ cho trạng thái N/A
  else
    # Đọc các giá trị vào biến riêng biệt
    read -r disk_used_raw disk_total_raw disk_percent_raw_str <<<"$disk_stats_output"
    # Ví dụ: disk_used_raw="20G", disk_total_raw="40G", disk_percent_raw_str="53%"

    disk_used_gb=$(echo "$disk_used_raw" | sed 's/G//')
    disk_total_gb=$(echo "$disk_total_raw" | sed 's/G//')

    # Xóa dấu % để lấy giá trị số cho việc so sánh logic
    disk_percent_numeric=$(echo "$disk_percent_raw_str" | sed 's/%//')

    # Kiểm tra xem disk_percent_numeric có phải là số không
    if ! [[ "$disk_percent_numeric" =~ ^[0-9]+$ ]]; then
      # Nếu không phải số (ví dụ: df trả về định dạng lạ, hoặc disk_percent_raw_str trống)
      # Hiển thị (ERR%) với màu đỏ. Sử dụng giá trị gốc nếu có, hoặc ERR nếu trống.
      display_val_on_error="(${disk_percent_raw_str:-ERR})"
      disk_percent_display="\033[31m${display_val_on_error}\033[0m"
      # Bạn cũng có thể muốn đặt lại disk_used_gb và disk_total_gb thành "ERR" ở đây nếu muốn
      # disk_used_gb="ERR"
      # disk_total_gb="ERR"
    else
      # Nếu là số, tiến hành định dạng màu như cũ
      # Sử dụng awk -v để truyền biến vào awk một cách an toàn hơn ENVIRON
      # Truyền chuỗi đã có dấu ngoặc đơn và % (ví dụ: "(53%)") vào awk
      disk_percent_display_input="(${disk_percent_raw_str})"
      disk_percent_display=$(echo "$disk_percent_numeric" | awk -v p_str="$disk_percent_display_input" \
        '{ \
        val = $1 + 0; # Đảm bảo $1 được coi là số
        if (val > 90) { \
          printf "\033[31m%s\033[0m", p_str; \
        } else if (val > 70) { \
          printf "\033[33m%s\033[0m", p_str; \
        } else { \
          printf "%s", p_str; \
        } \
      }')
    fi
  fi
  disk_info="${disk_used_gb}/${disk_total_gb}GB ${disk_percent_display}"
  echo "$dung_luong_o_cung_hien_tai: $disk_info"
  echo "==================================================================="
  if [[ -d /usr/local/lsws/logs ]]; then
    local kiemtra_dung_luong_logs_server=$(du -hs /usr/local/lsws/logs | sed 's/\t//g' | cut -f1 -d '/')
    echo "Dung lượng logs của server là ${kiemtra_dung_luong_logs_server}B"
  fi

  if [[ -f /var/log/mysql/mysql.log ]]; then
    local kiemtra_dung_luong_logs_server=$(du -hs /var/log/mysql | sed 's/\t//g' | cut -f1 -d '/')
    echo "Dung lượng logs database của server là ${kiemtra_dung_luong_logs_server}B"
  fi

  if [ "$(ls -A /etc/wptt/vhost | grep -v '^\.\.conf$' | sort -uV)" ]; then
    for entry in $(ls -A /etc/wptt/vhost | grep -v '^\.\.conf$' | sort -uV); do
      local domain=$(echo $entry | sed 's/^.//' | sed 's/.conf//')
      local path="/usr/local/lsws/$domain/html"
      local i=1
      if [[ -d "$path" ]]; then
        echo "==================================================================="
        echo "$domain đang sử dụng ổ cứng: "
        local kiemtra_dung_luong=$(du -hs $path | sed 's/\t//g' | cut -f1 -d '/')
        echo "Dung lượng mã nguồn website $domain là ${kiemtra_dung_luong}B"
      fi
      if [[ -d /usr/local/backup-website/$domain && $(ls /usr/local/backup-website/$domain | grep ".zip$\|.sql$\|.sql.gz$") ]]; then
        local kiemtra_dung_luong_backup=$(du -hs /usr/local/backup-website/$domain | sed 's/\t//g' | cut -f1 -d '/')
        echo "Dung lượng backup của website $domain là ${kiemtra_dung_luong_backup}B"
      fi

      if [[ -d /usr/local/lsws/$domain/luucache ]]; then
        #check có sử dụng litespeed cache plugin hoặc có triển khai proxy ngược
        if [[ -d $path/wp-content/plugins/litespeed-cache || $(cat $path/.htaccess | grep '\[P\]') != '' || $(cat /usr/local/lsws/conf/vhosts/$domain/$domain.conf | grep 'proxy') != '' ]]; then
          local kiemtra_dung_luong_cache=$(du -hs /usr/local/lsws/$domain/luucache | sed 's/\t//g' | cut -f1 -d '/')
          echo "Dung lượng cache LScache của website $domain là ${kiemtra_dung_luong_cache}B"
        fi
      fi

      if [[ -d /usr/local/lsws/$domain/logs ]]; then
        local kiemtra_dung_luong_logs=$(du -hs /usr/local/lsws/$domain/logs | sed 's/\t//g' | cut -f1 -d '/')
        echo "Dung lượng logs của website $domain là ${kiemtra_dung_luong_logs}B"
      fi

      . /etc/wptt/vhost/.$domain.conf
      if [[ -d /var/lib/mysql/$DB_Name_web ]]; then
        local kiemtra_dung_luong_db=$(du -hs /var/lib/mysql/$DB_Name_web | sed 's/\t//g' | cut -f1 -d '/')
        if [[ $(echo $kiemtra_dung_luong_db | grep 'K') = '' ]]; then
          echo "Dung lượng database của website $domain là ${kiemtra_dung_luong_db}B"
        fi
      fi
      echo "==================================================================="
    done
  fi
}

function cd-src() {
  source "/etc/wptt/ma-nguon/wptt-truy-cap-nhanh"
}

function cd-log() {
  source "/etc/wptt/ma-nguon/wptt-truy-cap-nhanh-log"
}

if [[ $2 ]]; then
  $1 $2
else
  $1
fi

if [[ $1 = '' ]]; then
  help
fi

for func_name in $(cat /usr/bin/wptt | grep 'function' | cut -f2 -d ' ' | cut -f1 -d '('); do unset -f "$func_name"; done #unset hết function tránh xung đột
unset $(cat /etc/wptt/lang/vi.sh | cut -f1 -d '=' | sed '/^#/d' | sed '/^$/d' | tr '\n' ' ')                              #unset hết biến để giải phóng ram
unset func_name
